// <auto-generated />
using System;
using Manero.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Manero.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231113121736_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Manero.Models.Entities.AdressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Adresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Solna",
                            PostalCode = "17165",
                            StreetName = "Tomtebodavägen 3A"
                        },
                        new
                        {
                            Id = 2,
                            City = "Örebro",
                            PostalCode = "70225",
                            StreetName = "Stenbackevägen 6"
                        },
                        new
                        {
                            Id = 3,
                            City = "Göteborg",
                            PostalCode = "41301",
                            StreetName = "Haga Östergata 12"
                        },
                        new
                        {
                            Id = 4,
                            City = "Halmstad",
                            PostalCode = "30248",
                            StreetName = "Nässjögatan 10"
                        },
                        new
                        {
                            Id = 5,
                            City = "Malmö",
                            PostalCode = "21212",
                            StreetName = "Östra Förstadsgatan 46"
                        },
                        new
                        {
                            Id = 6,
                            City = "Helsingborg",
                            PostalCode = "25237",
                            StreetName = "Södergatan 78"
                        },
                        new
                        {
                            Id = 7,
                            City = "Karlshamn",
                            PostalCode = "37431",
                            StreetName = "Västra Kajen 8"
                        },
                        new
                        {
                            Id = 8,
                            City = "Malmö",
                            PostalCode = "21422",
                            StreetName = "Barkgatan 6"
                        },
                        new
                        {
                            Id = 9,
                            City = "Stockholm",
                            PostalCode = "11137",
                            StreetName = "Adolf Fredriks Kyrkogata 2"
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Men"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Women"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Kids"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Sport"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Accessories"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Dresses"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Shoes"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Pants"
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "T-shirt"
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "Bag"
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.CheckoutEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusCodeId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateStatusDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("StatusCodeId");

                    b.ToTable("CheckoutEntities");
                });

            modelBuilder.Entity("Manero.Models.Entities.ColorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorCode = "#FF6262",
                            ColorName = "red"
                        },
                        new
                        {
                            Id = 2,
                            ColorCode = "#63C7FF",
                            ColorName = "lightblue"
                        },
                        new
                        {
                            Id = 3,
                            ColorCode = "#323858",
                            ColorName = "navyblue"
                        },
                        new
                        {
                            Id = 4,
                            ColorCode = "#111111",
                            ColorName = "black"
                        },
                        new
                        {
                            Id = 5,
                            ColorCode = "#F8E7CD",
                            ColorName = "beige"
                        },
                        new
                        {
                            Id = 6,
                            ColorCode = "#82614b",
                            ColorName = "brown"
                        },
                        new
                        {
                            Id = 7,
                            ColorCode = "#ec7322",
                            ColorName = "orange"
                        },
                        new
                        {
                            Id = 8,
                            ColorCode = "#c3c2c1",
                            ColorName = "lightgrey"
                        },
                        new
                        {
                            Id = 9,
                            ColorCode = "#900603",
                            ColorName = "ruby"
                        },
                        new
                        {
                            Id = 10,
                            ColorCode = "#edc729",
                            ColorName = "yellow"
                        },
                        new
                        {
                            Id = 11,
                            ColorCode = "#667a65",
                            ColorName = "forestgreen"
                        },
                        new
                        {
                            Id = 12,
                            ColorCode = "#ffffff",
                            ColorName = "white"
                        },
                        new
                        {
                            Id = 13,
                            ColorCode = "#bb9195",
                            ColorName = "lightpink"
                        },
                        new
                        {
                            Id = 14,
                            ColorCode = "#75797c",
                            ColorName = "grey"
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.ImageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("521d06b5-d524-4a9e-bf99-4e3e4896790d"),
                            ImageName = "beach shoes",
                            ImageUrl = "/images/products/beach-shoes.jpg"
                        },
                        new
                        {
                            Id = new Guid("e80d078e-7405-4d04-8d85-90a8c3d1bfe7"),
                            ImageName = "beige pants",
                            ImageUrl = "/images/products/beige-pants.jpg"
                        },
                        new
                        {
                            Id = new Guid("8b58ee69-119b-4efc-9b80-92c78c6d6f1a"),
                            ImageName = "black sneakers",
                            ImageUrl = "/images/products/black-sneakers.jpg"
                        },
                        new
                        {
                            Id = new Guid("2fcf10b4-9a25-4c9b-a7c1-8a4c05a30fc6"),
                            ImageName = "black t-shirt",
                            ImageUrl = "/images/products/black-tshirt.jpg"
                        },
                        new
                        {
                            Id = new Guid("33d33f47-5b7b-4f29-98c6-c3e51edc1b0c"),
                            ImageName = "black warm hat",
                            ImageUrl = "/images/products/black-warm-hat.jpg"
                        },
                        new
                        {
                            Id = new Guid("b67f013c-87d9-42ef-8922-cdc0f0ee0075"),
                            ImageName = "blue dress for kids",
                            ImageUrl = "/images/products/blue-dress-kids.jpg"
                        },
                        new
                        {
                            Id = new Guid("74220f01-6d1f-4e24-ba98-3b01704aeb86"),
                            ImageName = "brown shoulder handbag",
                            ImageUrl = "/images/products/brown-shoulder-handbag.jpg"
                        },
                        new
                        {
                            Id = new Guid("d1b5b5f3-46ce-4a24-b86c-f79937df44b6"),
                            ImageName = "checkered handbag",
                            ImageUrl = "/images/products/checkered-handbag.jpg"
                        },
                        new
                        {
                            Id = new Guid("81b1a8e6-3211-487a-bab5-3c2825d108d7"),
                            ImageName = "checkered dress for kids",
                            ImageUrl = "/images/products/checkered-kidsdress.jpg"
                        },
                        new
                        {
                            Id = new Guid("3a37d8c5-5c36-4f68-a256-22d24ca88576"),
                            ImageName = "colorful dress for kids",
                            ImageUrl = "/images/products/colorful-kidsdress.jpg"
                        },
                        new
                        {
                            Id = new Guid("6c1321f8-7c17-4e63-938c-1b6eab1d83aa"),
                            ImageName = "denim shorts",
                            ImageUrl = "/images/products/denim-shorts.jpg"
                        },
                        new
                        {
                            Id = new Guid("f226f5d4-9c33-45c0-9531-d540ef06c168"),
                            ImageName = "green shoes for kids",
                            ImageUrl = "/images/products/green-shoes-kids.jpg"
                        },
                        new
                        {
                            Id = new Guid("8e0ee96a-773b-4be5-b907-e3da505f9ca4"),
                            ImageName = "grey t-shirt for women",
                            ImageUrl = "/images/products/grey-tshirt-women.jpg"
                        },
                        new
                        {
                            Id = new Guid("9b59db9a-7c0d-4880-9c60-5575ef1e5b85"),
                            ImageName = "hat",
                            ImageUrl = "/images/products/hat.jpg"
                        },
                        new
                        {
                            Id = new Guid("25c8d39e-cc8b-44b4-b3e4-76872d3f22b5"),
                            ImageName = "jeans",
                            ImageUrl = "/images/products/jeans.jpg"
                        },
                        new
                        {
                            Id = new Guid("d5a0abf6-34d5-4ed3-9c31-d73f25640b1d"),
                            ImageName = "warm hat for kids",
                            ImageUrl = "/images/products/kids-warm-hat.jpg"
                        },
                        new
                        {
                            Id = new Guid("b3a41c96-17d2-4649-9d8c-28448a29ce7c"),
                            ImageName = "knitted shirt",
                            ImageUrl = "/images/products/knitted-shirt.jpg"
                        },
                        new
                        {
                            Id = new Guid("8d0bd08c-9930-4e0c-8f15-88cde5d8490b"),
                            ImageName = "nike sneakers",
                            ImageUrl = "/images/products/nike-sneakers.jpg"
                        },
                        new
                        {
                            Id = new Guid("041e3b6f-1a52-44ca-9981-88c785c7c9e7"),
                            ImageName = "orange pants for kids",
                            ImageUrl = "/images/products/orange-kidspants.jpg"
                        },
                        new
                        {
                            Id = new Guid("f88c17b0-6111-4620-bc3a-284bca392176"),
                            ImageName = "funny owl hat for kids",
                            ImageUrl = "/images/products/owl-hat-kids.jpg"
                        },
                        new
                        {
                            Id = new Guid("4d4a7df3-6ed1-4ef0-8ea7-4fc92ea31de2"),
                            ImageName = "red handbag",
                            ImageUrl = "/images/products/red-handbag.jpg"
                        },
                        new
                        {
                            Id = new Guid("2e5247f9-3d88-48d0-8c47-9939e6e7eaa4"),
                            ImageName = "sneakers",
                            ImageUrl = "/images/products/sneakers.jpg"
                        },
                        new
                        {
                            Id = new Guid("98363f68-96c9-44ab-b3d3-e32ac25ea6ac"),
                            ImageName = "striped shirt for kids",
                            ImageUrl = "/images/products/striped-shirt-kids.jpg"
                        },
                        new
                        {
                            Id = new Guid("1b172b64-5462-4a20-bef3-8c6f04c62e87"),
                            ImageName = "vans canvas shoes",
                            ImageUrl = "/images/products/vans-canvas-shoes.jpg"
                        },
                        new
                        {
                            Id = new Guid("35acca4d-0ff1-4d9c-b5d3-6db3ca5c7c13"),
                            ImageName = "white body for kids",
                            ImageUrl = "/images/products/white-body-kids.jpg"
                        },
                        new
                        {
                            Id = new Guid("b03f66c5-6c50-487b-b620-37e9da2c2b33"),
                            ImageName = "summer dress",
                            ImageUrl = "/images/products/summer-dress.jpg"
                        },
                        new
                        {
                            Id = new Guid("02f03e93-4e4e-4c9d-8620-e8a40a986b36"),
                            ImageName = "white t-shirt",
                            ImageUrl = "/images/products/white-tshirt.jpg"
                        },
                        new
                        {
                            Id = new Guid("679f8dd5-9f41-4773-8f57-3bf99f06cd9b"),
                            ImageName = "white t-shirt for men",
                            ImageUrl = "/images/products/white-tshirt-men.jpg"
                        },
                        new
                        {
                            Id = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3"),
                            ImageName = "extra product image",
                            ImageUrl = "/images/products/extra-product-image.png"
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.OrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DeliveryPrice")
                        .HasColumnType("money");

                    b.Property<string>("PromocodeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("SubtotalPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PromocodeId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Manero.Models.Entities.OrderRowEntity", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductArticleNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ProductVariantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("money");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("money");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductArticleNumber", "ProductVariantId");

                    b.HasIndex("ProductVariantId");

                    b.ToTable("OrderRows");
                });

            modelBuilder.Entity("Manero.Models.Entities.PaymentMethodEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("ExpiryMonth")
                        .HasColumnType("int");

                    b.Property<int>("ExpiryYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("Manero.Models.Entities.ProductCategoryEntity", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = "HAT001",
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = "JEANS002",
                            CategoryId = 8
                        },
                        new
                        {
                            ProductId = "KIDHAT003",
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = "KIDHAT003",
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = "SNEAKERS005",
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = "SNEAKERS005",
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = "OWLHAT007",
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = "OWLHAT007",
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = "BEACHSHOES016",
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = "SNEAKERS009",
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = "SNEAKERS009",
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = "KNITTED004",
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = "KIDPANTS006",
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = "KIDPANTS006",
                            CategoryId = 8
                        },
                        new
                        {
                            ProductId = "HANDBAG008",
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = "HANDBAG008",
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = "STRIPEDSHIRT010",
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = "SUMMERDRESS011",
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = "SUMMERDRESS011",
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = "VANSSHOES012",
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = "KIDSBODYSUIT013",
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = "WHITETEE014",
                            CategoryId = 9
                        },
                        new
                        {
                            ProductId = "WHITETEE014",
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = "MENSWHITETEE015",
                            CategoryId = 9
                        },
                        new
                        {
                            ProductId = "MENSWHITETEE015",
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = "BEIGEPANTS017",
                            CategoryId = 8
                        },
                        new
                        {
                            ProductId = "BEIGEPANTS017",
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = "BLACKSNEAKERS018",
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = "BLACKSNEAKERS018",
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = "BLACKSNEAKERS018",
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = "BLACKTEE019",
                            CategoryId = 9
                        },
                        new
                        {
                            ProductId = "BLACKWARMHAT020",
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = "KIDBLUEDRESS021",
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = "KIDBLUEDRESS021",
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = "BROWNHANDBAG022",
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = "BROWNHANDBAG022",
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = "CHECKEREDHANDBAG023",
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = "CHECKEREDHANDBAG023",
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = "CHECKEREDKIDSDRESS024",
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = "CHECKEREDKIDSDRESS024",
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = "COLORFULKIDSDRESS025",
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = "COLORFULKIDSDRESS025",
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = "DENIMSHORTS026",
                            CategoryId = 8
                        },
                        new
                        {
                            ProductId = "DENIMSHORTS026",
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = "GREENKIDSSHOES027",
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = "GREENKIDSSHOES027",
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = "GREYWOMENSTEE028",
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = "GREYWOMENSTEE028",
                            CategoryId = 9
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.ProductEntity", b =>
                {
                    b.Property<string>("ArticleNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("money");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StandardCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("ArticleNumber");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ArticleNumber = "HAT001",
                            Description = "This versatile and fashionable hat is the perfect accessory to complete your look. Crafted with high-quality materials, it offers both style and protection from the elements. Whether you're heading out for a casual day or a special occasion, this hat will be your go-to choice.",
                            Discount = 16.99m,
                            Price = 19.99m,
                            ProductName = "Stylish Hat for All Seasons",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "JEANS002",
                            Description = "Elevate your fashion game with these classic denim jeans. Tailored for comfort and durability, these jeans are a wardrobe essential for any occasion.",
                            Discount = 44.99m,
                            Price = 49.99m,
                            ProductName = "Classic Denim Jeans for Every Wardrobe",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "KIDHAT003",
                            Description = "Keep your little ones warm and stylish with this adorable kids' warm hat. Crafted with love and care, it's perfect for colder days. Your child will be both snug and cute in this cozy accessory.",
                            Discount = 10.99m,
                            Price = 12.99m,
                            ProductName = "Cozy Kids' Warm Hat - Stay Toasty in Style",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "SNEAKERS005",
                            Description = "Get ready to walk in style with these Nike sneakers. Designed for both fashion and performance, these shoes offer the best of both worlds. Elevate your footwear game with these iconic kicks.",
                            Discount = 74.99m,
                            Price = 79.99m,
                            ProductName = "Nike Sneakers - Step into Style and Comfort",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "OWLHAT007",
                            Description = "Your little one will adore this adorable owl hat. Designed to keep them warm and looking cute, it's the perfect accessory for your child. Let your kid show off their unique style with this charming hat.",
                            Discount = 9.99m,
                            Price = 14.99m,
                            ProductName = "Owl Hat for Kids - Cute and Cuddly Headwear",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "BEACHSHOES016",
                            Description = "Make a statement on the beach with these stylish and comfortable beach shoes. Crafted for sandy adventures, they provide the perfect blend of fashion and function.",
                            Discount = 3.49m,
                            Price = 8.99m,
                            ProductName = "Beach Shoes - Step into Paradise",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "SNEAKERS009",
                            Description = "These sneakers are your go-to choice for both style and comfort. Crafted with care, they are perfect for everyday wear. Whether you're running errands or going for a walk, these sneakers have got you covered.",
                            Discount = 50m,
                            Price = 59.99m,
                            ProductName = "Sneakers - A Step in the Right Direction",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "KNITTED004",
                            Description = "Embrace the perfect blend of comfort and style with this knitted shirt. Crafted with soft, breathable fabric, it's a versatile addition to your wardrobe. Ideal for a casual day out or dressing up for a special occasion.",
                            Price = 34.99m,
                            ProductName = "Knitted Shirt - Comfort and Elegance Combined",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "KIDPANTS006",
                            Description = "These vibrant orange kids' pants are a delightful addition to your child's wardrobe. Designed with comfort in mind, they provide both style and ease of movement. Make your child stand out with this eye-catching piece.",
                            Price = 29.99m,
                            ProductName = "Orange Kids' Pants - Vibrant and Comfy Bottoms",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "HANDBAG008",
                            Description = "Elevate your style with this chic red handbag. Perfect for any occasion, this handbag combines elegance with functionality. Carry your essentials in style with this stunning accessory.",
                            Price = 39.99m,
                            ProductName = "Red Handbag - Elegance Meets Functionality",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "STRIPEDSHIRT010",
                            Description = "Dress your child in this playful and stylish striped shirt. Made with quality materials, it ensures both comfort and fashion for your little one. Ideal for any casual occasion.",
                            Price = 19.99m,
                            ProductName = "Striped Shirt for Kids - Stylish and Playful",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "SUMMERDRESS011",
                            Description = "Beat the heat in style with this stunning summer dress. Perfect for sunny days and special events, this dress is designed to keep you cool and looking elegant.",
                            Price = 49.99m,
                            ProductName = "Summer Dress - Stay Cool and Elegant",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "VANSSHOES012",
                            Description = "Step into the classic world of Vans with these canvas shoes. Known for their timeless appeal and comfort, these shoes are a must-have for any sneaker enthusiast.",
                            Price = 89.99m,
                            ProductName = "Vans Canvas Shoes - Classic Comfort and Style",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "KIDSBODYSUIT013",
                            Description = "Keep your child comfortable and stylish with this white bodysuit. Crafted with care, it's perfect for all-day wear. Your little one will look adorable in this classic piece.",
                            Price = 8.99m,
                            ProductName = "White Bodysuit for Kids - Pure Comfort and Style",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "WHITETEE014",
                            Description = "This white t-shirt is a wardrobe essential that combines versatility and style. Whether you're dressing up or down, this t-shirt is a timeless choice.",
                            Price = 9.99m,
                            ProductName = "White T-Shirt - The Wardrobe Essential ",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "MENSWHITETEE015",
                            Description = "This classic white t-shirt for men offers both style and comfort. A versatile addition to your wardrobe, it's perfect for casual outings and everyday wear.",
                            Price = 14.99m,
                            ProductName = "White T-Shirt for Men - Classic and Comfy",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "BEIGEPANTS017",
                            Description = "Elevate your style with these timeless beige pants. Crafted for comfort and sophistication, they are a versatile addition to your wardrobe.",
                            Price = 39.99m,
                            ProductName = "Beige Pants - Timeless Elegance ",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "BLACKSNEAKERS018",
                            Description = "Step out in style with these bold black sneakers. They are designed to enhance your fashion game while providing comfort. A must-have for sneaker enthusiasts.",
                            Price = 69.99m,
                            ProductName = "Black Sneakers - Bold and Versatile Footwear",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "BLACKTEE019",
                            Description = "This black t-shirt is a classic wardrobe staple that combines style and versatility. Whether you're dressing up or keeping it casual, this t-shirt is the perfect choice.",
                            Price = 9.99m,
                            ProductName = "Black T-Shirt - The Classic Wardrobe Staple",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "BLACKWARMHAT020",
                            Description = "Stay warm and fashionable with this black warm hat. Crafted with soft materials, it's perfect for colder days. Add a touch of style to your winter wardrobe.",
                            Price = 14.99m,
                            ProductName = "Black Warm Hat - Cozy and Fashionable",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "KIDBLUEDRESS021",
                            Description = "Dress your child in this playful and elegant blue dress. Made with care, it's perfect for special occasions and casual outings. Your little one will shine in this lovely piece.",
                            Price = 17.99m,
                            ProductName = "Blue Dress for Kids - Playful and Elegant",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "BROWNHANDBAG022",
                            Description = "Elevate your style with this sophisticated brown shoulder handbag. Crafted for both fashion and functionality, it's the ideal accessory for any occasion.",
                            Price = 38.99m,
                            ProductName = "Brown Shoulder Handbag - Sophisticated and Practical",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "CHECKEREDHANDBAG023",
                            Description = "Add a touch of trendiness to your outfit with this checkered handbag. Perfect for elevating your style, it's designed to keep you chic and organized.",
                            Price = 29.99m,
                            ProductName = "Checkered Handbag - Trendy and Chic",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "CHECKEREDKIDSDRESS024",
                            Description = "Dress your child in this playful checkered dress. Crafted with love and care, it's perfect for your little one's adventures. Let them stand out with this unique piece.",
                            Price = 24.99m,
                            ProductName = "Checkered Kids' Dress - Playful Patterns for Little Ones",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "COLORFULKIDSDRESS025",
                            Description = "Dress your child in this vibrant and charming dress. Made with quality materials, it ensures both comfort and style for your little one. Ideal for any special occasion.",
                            Price = 35.99m,
                            ProductName = "Colorful Kids' Dress - Vibrant and Charming",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "DENIMSHORTS026",
                            Description = "Stay comfortable and stylish with these denim shorts. Designed for ease of movement, they are the perfect choice for casual days.",
                            Price = 24.99m,
                            ProductName = "Denim Shorts - Casual Comfort with a Stylish Twist",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "GREENKIDSSHOES027",
                            Description = "Add a pop of color to your child's outfit with these fun and practical green shoes. Crafted for comfort and style, they're perfect for everyday adventures.",
                            Price = 19.99m,
                            ProductName = "Green Shoes for Kids - Fun and Practical Footwear",
                            StandardCurrency = "USD"
                        },
                        new
                        {
                            ArticleNumber = "GREYWOMENSTEE028",
                            Description = "This grey t-shirt for women offers both style and comfort. A versatile addition to your wardrobe, it's perfect for casual outings and everyday wear.",
                            Price = 14.99m,
                            ProductName = "Grey T-Shirt for Women - Effortless Elegance",
                            StandardCurrency = "USD"
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.ProductImageEntity", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId", "ImageId");

                    b.HasIndex("ImageId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            ProductId = "BEACHSHOES016",
                            ImageId = new Guid("521d06b5-d524-4a9e-bf99-4e3e4896790d")
                        },
                        new
                        {
                            ProductId = "BEIGEPANTS017",
                            ImageId = new Guid("e80d078e-7405-4d04-8d85-90a8c3d1bfe7")
                        },
                        new
                        {
                            ProductId = "BLACKSNEAKERS018",
                            ImageId = new Guid("8b58ee69-119b-4efc-9b80-92c78c6d6f1a")
                        },
                        new
                        {
                            ProductId = "BLACKTEE019",
                            ImageId = new Guid("2fcf10b4-9a25-4c9b-a7c1-8a4c05a30fc6")
                        },
                        new
                        {
                            ProductId = "BLACKWARMHAT020",
                            ImageId = new Guid("33d33f47-5b7b-4f29-98c6-c3e51edc1b0c")
                        },
                        new
                        {
                            ProductId = "KIDBLUEDRESS021",
                            ImageId = new Guid("b67f013c-87d9-42ef-8922-cdc0f0ee0075")
                        },
                        new
                        {
                            ProductId = "BROWNHANDBAG022",
                            ImageId = new Guid("74220f01-6d1f-4e24-ba98-3b01704aeb86")
                        },
                        new
                        {
                            ProductId = "CHECKEREDHANDBAG023",
                            ImageId = new Guid("d1b5b5f3-46ce-4a24-b86c-f79937df44b6")
                        },
                        new
                        {
                            ProductId = "CHECKEREDKIDSDRESS024",
                            ImageId = new Guid("81b1a8e6-3211-487a-bab5-3c2825d108d7")
                        },
                        new
                        {
                            ProductId = "COLORFULKIDSDRESS025",
                            ImageId = new Guid("3a37d8c5-5c36-4f68-a256-22d24ca88576")
                        },
                        new
                        {
                            ProductId = "DENIMSHORTS026",
                            ImageId = new Guid("6c1321f8-7c17-4e63-938c-1b6eab1d83aa")
                        },
                        new
                        {
                            ProductId = "GREENKIDSSHOES027",
                            ImageId = new Guid("f226f5d4-9c33-45c0-9531-d540ef06c168")
                        },
                        new
                        {
                            ProductId = "GREYWOMENSTEE028",
                            ImageId = new Guid("8e0ee96a-773b-4be5-b907-e3da505f9ca4")
                        },
                        new
                        {
                            ProductId = "HAT001",
                            ImageId = new Guid("9b59db9a-7c0d-4880-9c60-5575ef1e5b85")
                        },
                        new
                        {
                            ProductId = "JEANS002",
                            ImageId = new Guid("25c8d39e-cc8b-44b4-b3e4-76872d3f22b5")
                        },
                        new
                        {
                            ProductId = "KIDHAT003",
                            ImageId = new Guid("d5a0abf6-34d5-4ed3-9c31-d73f25640b1d")
                        },
                        new
                        {
                            ProductId = "KNITTED004",
                            ImageId = new Guid("b3a41c96-17d2-4649-9d8c-28448a29ce7c")
                        },
                        new
                        {
                            ProductId = "SNEAKERS005",
                            ImageId = new Guid("8d0bd08c-9930-4e0c-8f15-88cde5d8490b")
                        },
                        new
                        {
                            ProductId = "KIDPANTS006",
                            ImageId = new Guid("041e3b6f-1a52-44ca-9981-88c785c7c9e7")
                        },
                        new
                        {
                            ProductId = "OWLHAT007",
                            ImageId = new Guid("f88c17b0-6111-4620-bc3a-284bca392176")
                        },
                        new
                        {
                            ProductId = "HANDBAG008",
                            ImageId = new Guid("4d4a7df3-6ed1-4ef0-8ea7-4fc92ea31de2")
                        },
                        new
                        {
                            ProductId = "SNEAKERS009",
                            ImageId = new Guid("2e5247f9-3d88-48d0-8c47-9939e6e7eaa4")
                        },
                        new
                        {
                            ProductId = "STRIPEDSHIRT010",
                            ImageId = new Guid("98363f68-96c9-44ab-b3d3-e32ac25ea6ac")
                        },
                        new
                        {
                            ProductId = "VANSSHOES012",
                            ImageId = new Guid("1b172b64-5462-4a20-bef3-8c6f04c62e87")
                        },
                        new
                        {
                            ProductId = "KIDSBODYSUIT013",
                            ImageId = new Guid("35acca4d-0ff1-4d9c-b5d3-6db3ca5c7c13")
                        },
                        new
                        {
                            ProductId = "SUMMERDRESS011",
                            ImageId = new Guid("b03f66c5-6c50-487b-b620-37e9da2c2b33")
                        },
                        new
                        {
                            ProductId = "WHITETEE014",
                            ImageId = new Guid("02f03e93-4e4e-4c9d-8620-e8a40a986b36")
                        },
                        new
                        {
                            ProductId = "MENSWHITETEE015",
                            ImageId = new Guid("679f8dd5-9f41-4773-8f57-3bf99f06cd9b")
                        },
                        new
                        {
                            ProductId = "BEACHSHOES016",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "BEIGEPANTS017",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "BLACKSNEAKERS018",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "BLACKTEE019",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "BLACKWARMHAT020",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "KIDBLUEDRESS021",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "BROWNHANDBAG022",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "CHECKEREDHANDBAG023",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "CHECKEREDKIDSDRESS024",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "COLORFULKIDSDRESS025",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "DENIMSHORTS026",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "GREENKIDSSHOES027",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "GREYWOMENSTEE028",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "HAT001",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "JEANS002",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "KIDHAT003",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "KNITTED004",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "SNEAKERS005",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "KIDPANTS006",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "OWLHAT007",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "HANDBAG008",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "SNEAKERS009",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "STRIPEDSHIRT010",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "VANSSHOES012",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "KIDSBODYSUIT013",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "SUMMERDRESS011",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "WHITETEE014",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        },
                        new
                        {
                            ProductId = "MENSWHITETEE015",
                            ImageId = new Guid("9e1ef4b4-2b99-49e5-b1f3-483e18c650f3")
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.ProductReviewEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductArticleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductArticleNumber");

                    b.HasIndex("UserId");

                    b.ToTable("ProductReviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7ef79fb-4a19-46f3-8300-8b17a9715b0d"),
                            Comment = "This product is a true gem. The quality is exceptional, and it has quickly become a favorite in my wardrobe. The attention to detail in the craftsmanship is evident, and it's incredibly comfortable to wear. I can confidently say that I would recommend it to anyone seeking a versatile and high-quality addition to their collection. The value you get from this item is unmatched, making it a fantastic investment.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7742),
                            ProductArticleNumber = "BEIGEPANTS017",
                            Rating = 5,
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721"
                        },
                        new
                        {
                            Id = new Guid("6d0a69eb-51a7-4c21-bba6-780de40bc3ca"),
                            Comment = "This item is fantastic!",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7809),
                            ProductArticleNumber = "BEIGEPANTS017",
                            Rating = 5,
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199"
                        },
                        new
                        {
                            Id = new Guid("f7e0ecf2-0da4-49a2-980a-9b8a703b34cb"),
                            Comment = "These kids' clothes are perfect for playdates and parties. They are stylish and practical, allowing children to look their best while having fun. While they may have minor room for improvement, they're a solid choice.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7812),
                            ProductArticleNumber = "KIDBLUEDRESS021",
                            Rating = 4,
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984"
                        },
                        new
                        {
                            Id = new Guid("0ce7d3f6-0c8e-46a2-8e70-7a9a86e2a00d"),
                            Comment = "Kids' fashion should be fun and functional, and these clothes deliver on both fronts. The designs are playful and appealing to children, while the quality ensures they last through playdates and adventures. A must-have for young fashionistas!",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7814),
                            ProductArticleNumber = "KIDBLUEDRESS021",
                            Rating = 5,
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199"
                        },
                        new
                        {
                            Id = new Guid("e499542e-83e5-4a11-b1c3-184c3be4a8a4"),
                            Comment = "Shopping for kids' clothes can be a joy when you find items like these. The designs are adorable, and the durability is a big plus. These clothes can withstand the wear and tear of active little ones while keeping them looking stylish.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7816),
                            ProductArticleNumber = "KIDBLUEDRESS021",
                            Rating = 5,
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721"
                        },
                        new
                        {
                            Id = new Guid("d78a5d59-3d22-4d24-9a72-9a0c5d64e962"),
                            Comment = "I had high hopes for these kids' clothes, but they fell short of my expectations. The quality is disappointing, and they didn't hold up well to regular use. I wouldn't recommend them.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7818),
                            ProductArticleNumber = "KIDBLUEDRESS021",
                            Rating = 2,
                            UserId = "8c5b75a1-6c17-4c7b-a5d7-562eaf1c3284"
                        },
                        new
                        {
                            Id = new Guid("ccedf9cd-4fb4-4a07-98f6-853d165a85cd"),
                            Comment = "I recently bought a pair of green kids' shoes for my child, and they've proven to be a fun and practical choice. The green color is eye-catching and adds a playful touch to their outfits. These shoes are well-constructed and offer good support for little feet. They are suitable for both outdoor play and casual outings. While they're not perfect, they strike a good balance between style and functionality, making them a solid option for active kids.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7820),
                            ProductArticleNumber = "GREENKIDSSHOES027",
                            Rating = 4,
                            UserId = "7d75c0ea-3c5e-443b-b29b-6c3e9ecbc2d3"
                        },
                        new
                        {
                            Id = new Guid("e99881b5-90e6-4a15-91ec-2c1c3a685c0e"),
                            Comment = "They are rather average in terms of design and quality. The green color is nice, and they do serve their purpose as everyday shoes. However, they lack the standout features or exceptional comfort that I was hoping for. If you're looking for basic green shoes for your child, these might fit the bill, but don't expect anything extraordinary.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7822),
                            ProductArticleNumber = "GREENKIDSSHOES027",
                            Rating = 3,
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984"
                        },
                        new
                        {
                            Id = new Guid("48c3f19f-2eeb-4e15-8f75-6d1e2dd408c9"),
                            Comment = "I couldn't be happier with my choice. The vibrant green color immediately caught my eye, and it's just as stylish in person. These shoes are not only fashionable but also incredibly comfortable for my little one to wear all day long. The quality is top-notch, and I appreciate the attention to detail in their design. These green shoes have quickly become a favorite in our child's wardrobe. I highly recommend them to parents looking for both style and comfort in kids' footwear.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7826),
                            ProductArticleNumber = "GREENKIDSSHOES027",
                            Rating = 5,
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721"
                        },
                        new
                        {
                            Id = new Guid("2b17df60-c61d-4fb3-9f2b-27132d57d2d3"),
                            Comment = "These green kids' shoes are stylish and comfy",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7828),
                            ProductArticleNumber = "GREENKIDSSHOES027",
                            Rating = 4,
                            UserId = "8c5b75a1-6c17-4c7b-a5d7-562eaf1c3284"
                        },
                        new
                        {
                            Id = new Guid("7a9a4502-3f42-4c0e-95e3-774fe9d1a96c"),
                            Comment = "Overall, this product is good. It serves its purpose and offers good value for the price.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7831),
                            ProductArticleNumber = "GREENKIDSSHOES027",
                            Rating = 3,
                            UserId = "0a43d58a-cb53-4c60-b4f3-8b88e84dd26d"
                        },
                        new
                        {
                            Id = new Guid("0ad7551d-9a60-43ce-b475-7a19e0e1d18a"),
                            Comment = "This product is dependable and stylish. It fulfills its purpose effectively and features an appealing design. While it's not without minor flaws, it's a solid choice for those seeking reliability and style.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7833),
                            ProductArticleNumber = "BROWNHANDBAG022",
                            Rating = 4,
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721"
                        },
                        new
                        {
                            Id = new Guid("d7d8b2ef-e7dd-45c5-9a77-9d5695d2b6f1"),
                            Comment = "I highly recommend this product. It's a standout choice and is worth every penny.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7835),
                            ProductArticleNumber = "JEANS002",
                            Rating = 5,
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984"
                        },
                        new
                        {
                            Id = new Guid("e4f2f0ff-85a6-40c9-8c14-962d2a28ff75"),
                            Comment = "I'm not impressed. It didn't live up to my expectations, and there were some issues.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7837),
                            ProductArticleNumber = "JEANS002",
                            Rating = 2,
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199"
                        },
                        new
                        {
                            Id = new Guid("f4242cc7-7dd3-4b7d-91f3-85d6cfe24222"),
                            Comment = "It's a solid pick. It's reliable and serves its purpose effectively. There are some areas for improvement, but it's a good choice.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7840),
                            ProductArticleNumber = "JEANS002",
                            Rating = 4,
                            UserId = "0a43d58a-cb53-4c60-b4f3-8b88e84dd26d"
                        },
                        new
                        {
                            Id = new Guid("18a2a186-631f-475a-8d83-190c16f9c525"),
                            Comment = "I'm very impressed with this purchase. It exceeded my expectations.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7844),
                            ProductArticleNumber = "JEANS002",
                            Rating = 4,
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984"
                        },
                        new
                        {
                            Id = new Guid("34f7c62e-d7d9-4bd3-98ad-8c6c3b16839f"),
                            Comment = "The quality is decent for the price. It serves its purpose.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7847),
                            ProductArticleNumber = "VANSSHOES012",
                            Rating = 3,
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721"
                        },
                        new
                        {
                            Id = new Guid("631a44dd-7f0e-44e9-9fa6-08e2c4ee8ecb"),
                            Comment = "This product offers great value. It's a must-buy.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7849),
                            ProductArticleNumber = "VANSSHOES012",
                            Rating = 5,
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199"
                        },
                        new
                        {
                            Id = new Guid("15d775e1-6ed2-487a-81d4-d7ca9e6f4e9a"),
                            Comment = "A good product overall. It's worth considering",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7851),
                            ProductArticleNumber = "SNEAKERS009",
                            Rating = 4,
                            UserId = "0a43d58a-cb53-4c60-b4f3-8b88e84dd26d"
                        },
                        new
                        {
                            Id = new Guid("a15e3c6a-691d-443e-82b6-cffce1dc3dc3"),
                            Comment = "This is an average purchase. It's neither exceptional nor disappointing.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7853),
                            ProductArticleNumber = "MENSWHITETEE015",
                            Rating = 3,
                            UserId = "7d75c0ea-3c5e-443b-b29b-6c3e9ecbc2d3"
                        },
                        new
                        {
                            Id = new Guid("4f8c9c3c-ae0d-44e9-82c9-899cead3e8c8"),
                            Comment = "I'm delighted with this purchase. It's a great product considering the price. The quality is good, and it serves its intended purpose well. While there's room for improvement, it's still a solid choice for those looking for a reliable and budget-friendly option.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7855),
                            ProductArticleNumber = "MENSWHITETEE015",
                            Rating = 4,
                            UserId = "0a43d58a-cb53-4c60-b4f3-8b88e84dd26d"
                        },
                        new
                        {
                            Id = new Guid("c7b8c9ae-2a8f-4c11-9f5d-8f95e9728ff1"),
                            Comment = "I'm not satisfied with this item. It didn't meet my expectations, and I've encountered several problems. The quality is disappointing, and I would caution against purchasing it.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7857),
                            ProductArticleNumber = "DENIMSHORTS026",
                            Rating = 2,
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721"
                        },
                        new
                        {
                            Id = new Guid("b2e4f8ec-1e88-47b3-9f43-850b9ad37e1f"),
                            Comment = "I'm delighted with this purchase. It's a great product considering the price. The quality is good, and it serves its intended purpose well. While there's room for improvement, it's still a solid choice for those looking for a reliable and budget-friendly option.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7858),
                            ProductArticleNumber = "DENIMSHORTS026",
                            Rating = 4,
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199"
                        },
                        new
                        {
                            Id = new Guid("7cc7cf7a-e8a7-46ef-9e17-c4ac3b74a9bc"),
                            Comment = "This product is absolutely amazing. The quality, design, and overall performance exceed all expectations. It's a versatile addition to any collection and offers exceptional value for its price. I highly recommend it to anyone seeking a top-tier product.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7860),
                            ProductArticleNumber = "STRIPEDSHIRT010",
                            Rating = 5,
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721"
                        },
                        new
                        {
                            Id = new Guid("6e6a4be1-0b08-4c18-ae90-3ec1d2cf30cb"),
                            Comment = "A good product overall. It's worth considering.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7862),
                            ProductArticleNumber = "STRIPEDSHIRT010",
                            Rating = 4,
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984"
                        },
                        new
                        {
                            Id = new Guid("6f9a4c8f-6cc3-49db-9a79-c6fe3a29fc3d"),
                            Comment = "This is an average purchase. It's neither exceptional nor disappointing.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7865),
                            ProductArticleNumber = "STRIPEDSHIRT010",
                            Rating = 3,
                            UserId = "0a43d58a-cb53-4c60-b4f3-8b88e84dd26d"
                        },
                        new
                        {
                            Id = new Guid("f3ecfaec-8eb5-4e60-af1b-7f2a4d3d08ca"),
                            Comment = "This product falls in the 'acceptable' range for me. It serves its purpose decently, but I believe there is room for improvement. The quality is average, and while it gets the job done, it doesn't particularly stand out. If you're seeking a basic, budget-friendly option, this might work for you. However, I'd be more inclined to explore other alternatives for a more satisfactory experience.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7866),
                            ProductArticleNumber = "WHITETEE014",
                            Rating = 3,
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721"
                        },
                        new
                        {
                            Id = new Guid("218e882b-ae56-4a9a-8fc0-1f5da0f7f2c5"),
                            Comment = "Overall, this product is good. It serves its purpose and offers good value for the price.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7868),
                            ProductArticleNumber = "BLACKWARMHAT020",
                            Rating = 4,
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199"
                        },
                        new
                        {
                            Id = new Guid("4a9c16d5-3e61-4a07-bffe-c24f21a2aabb"),
                            Comment = "It's a solid pick. It's reliable and serves its purpose effectively. There are some areas for improvement, but it's a good choice.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7871),
                            ProductArticleNumber = "BLACKWARMHAT020",
                            Rating = 4,
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984"
                        },
                        new
                        {
                            Id = new Guid("7b9d3e7c-c4ed-44d2-8dcd-d5a0c3b4f7ed"),
                            Comment = "This product is simply outstanding.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7873),
                            ProductArticleNumber = "SUMMERDRESS011",
                            Rating = 5,
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984"
                        },
                        new
                        {
                            Id = new Guid("0e9eddba-88db-480f-8a12-2e8ebaf9bde8"),
                            Comment = "This product is rather ordinary. It doesn't have any standout features but gets the job done. The quality is average, and it's suitable for everyday use.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7875),
                            ProductArticleNumber = "KIDSBODYSUIT013",
                            Rating = 3,
                            UserId = "0a43d58a-cb53-4c60-b4f3-8b88e84dd26d"
                        },
                        new
                        {
                            Id = new Guid("3bce2f0d-1d42-4b11-af2a-8d59ac6b87f7"),
                            Comment = "This product is reliable and affordable. It's a good choice for those seeking a budget-friendly option.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7877),
                            ProductArticleNumber = "KIDSBODYSUIT013",
                            Rating = 4,
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984"
                        },
                        new
                        {
                            Id = new Guid("c2b1bf4a-8cc4-4a59-9361-710c4eef7b45"),
                            Comment = "These kids' clothes strike a great balance between affordability and trendiness. They allow your children to stay fashionable without breaking the bank. The quality is good, making them suitable for everyday wear.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7879),
                            ProductArticleNumber = "KIDSBODYSUIT013",
                            Rating = 4,
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721"
                        },
                        new
                        {
                            Id = new Guid("1cb6f65d-1f22-4c14-9c6b-3fc7a4f9b8ed"),
                            Comment = "I wholeheartedly recommend this product. It's an outstanding addition to any wardrobe. The craftsmanship is top-notch, and it's incredibly comfortable to wear, even for extended periods. The attention to detail in the design is commendable, and the versatility of this item is unparalleled. It's worth every penny, and the value you receive far exceeds the price. If you're searching for a product that consistently delivers excellence, look no further.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7881),
                            ProductArticleNumber = "HANDBAG008",
                            Rating = 5,
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199"
                        },
                        new
                        {
                            Id = new Guid("0c2bd56c-2ec9-4a27-8b25-c51ca5e6f6db"),
                            Comment = "Highly recommended! It's a worthwhile addition to your collection.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7882),
                            ProductArticleNumber = "HANDBAG008",
                            Rating = 5,
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721"
                        },
                        new
                        {
                            Id = new Guid("3b4b3c38-5eb6-4e36-8a23-1bba8ed82f3d"),
                            Comment = "Kids' fashion should be fun and functional, and these clothes deliver on both fronts. The designs are playful and appealing to children, while the quality ensures they last through playdates and adventures. A must-have for young fashionistas!",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7884),
                            ProductArticleNumber = "OWLHAT007",
                            Rating = 5,
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721"
                        },
                        new
                        {
                            Id = new Guid("b20cd82f-8f11-4a13-b0fc-d71dd9f4b9eb"),
                            Comment = "This product is dependable and stylish. It fulfills its purpose effectively and features an appealing design. While it's not without minor flaws, it's a solid choice for those seeking reliability and style.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7886),
                            ProductArticleNumber = "HAT001",
                            Rating = 4,
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199"
                        },
                        new
                        {
                            Id = new Guid("7d8c89db-4ea3-4e3f-8a47-3e2ea1b6e4bc"),
                            Comment = "These kids' clothes are perfect for playdates and parties. They are stylish and practical, allowing children to look their best while having fun. While they may have minor room for improvement, they're a solid choice.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7888),
                            ProductArticleNumber = "KIDPANTS006",
                            Rating = 4,
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984"
                        },
                        new
                        {
                            Id = new Guid("d3dd10e3-8f3d-49ea-92ec-8f7cd2b5b0cd"),
                            Comment = "Highly recommended! It's a worthwhile addition to your collection.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7890),
                            ProductArticleNumber = "GREYWOMENSTEE028",
                            Rating = 5,
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721"
                        },
                        new
                        {
                            Id = new Guid("e8cf3f5c-1c7d-45ed-9ea6-cac3c4db07e1"),
                            Comment = "This product is a true gem. The quality is exceptional, and it has quickly become a favorite in my wardrobe. The attention to detail in the craftsmanship is evident, and it's incredibly comfortable to wear. I can confidently say that I would recommend it to anyone seeking a versatile and high-quality addition to their collection. The value you get from this item is unmatched, making it a fantastic investment.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7892),
                            ProductArticleNumber = "GREYWOMENSTEE028",
                            Rating = 5,
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199"
                        },
                        new
                        {
                            Id = new Guid("1edf8dc8-07ea-41e4-8c1f-8a1f7ff0e0d7"),
                            Comment = "This product offers great value. It's a must-buy.",
                            Created = new DateTime(2023, 11, 13, 13, 17, 36, 67, DateTimeKind.Local).AddTicks(7893),
                            ProductArticleNumber = "GREYWOMENSTEE028",
                            Rating = 5,
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984"
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.ProductTagEntity", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProductTags");

                    b.HasData(
                        new
                        {
                            ProductId = "HAT001",
                            TagId = 1
                        },
                        new
                        {
                            ProductId = "JEANS002",
                            TagId = 1
                        },
                        new
                        {
                            ProductId = "KIDHAT003",
                            TagId = 1
                        },
                        new
                        {
                            ProductId = "SNEAKERS005",
                            TagId = 1
                        },
                        new
                        {
                            ProductId = "OWLHAT007",
                            TagId = 1
                        },
                        new
                        {
                            ProductId = "BEACHSHOES016",
                            TagId = 1
                        },
                        new
                        {
                            ProductId = "SNEAKERS009",
                            TagId = 1
                        },
                        new
                        {
                            ProductId = "KNITTED004",
                            TagId = 2
                        },
                        new
                        {
                            ProductId = "KIDPANTS006",
                            TagId = 2
                        },
                        new
                        {
                            ProductId = "HANDBAG008",
                            TagId = 3
                        },
                        new
                        {
                            ProductId = "BEIGEPANTS017",
                            TagId = 3
                        },
                        new
                        {
                            ProductId = "CHECKEREDHANDBAG023",
                            TagId = 2
                        },
                        new
                        {
                            ProductId = "GREENKIDSSHOES027",
                            TagId = 2
                        },
                        new
                        {
                            ProductId = "GREYWOMENSTEE028",
                            TagId = 3
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.ProductVariantEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("ProductArticleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductArticleNumber");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductVariants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("834a820f-0b4b-49b3-a05c-1e7c131c5883"),
                            ColorId = 5,
                            ProductArticleNumber = "HAT001",
                            Quantity = 5,
                            SizeId = 3
                        },
                        new
                        {
                            Id = new Guid("29c17a1a-3a27-4e1d-8a0e-9674d7e5f8d2"),
                            ColorId = 4,
                            ProductArticleNumber = "JEANS002",
                            Quantity = 2,
                            SizeId = 1
                        },
                        new
                        {
                            Id = new Guid("6d6f7dbd-8d94-43bf-a56e-4a6e4d9c7f9c"),
                            ColorId = 3,
                            ProductArticleNumber = "JEANS002",
                            Quantity = 2,
                            SizeId = 2
                        },
                        new
                        {
                            Id = new Guid("48c1b5e8-6a91-478d-9c0d-85f6946c6b33"),
                            ColorId = 4,
                            ProductArticleNumber = "JEANS002",
                            Quantity = 2,
                            SizeId = 3
                        },
                        new
                        {
                            Id = new Guid("f5d131ab-9353-421c-9e25-19e9c7d9d3c1"),
                            ColorId = 3,
                            ProductArticleNumber = "JEANS002",
                            Quantity = 2,
                            SizeId = 4
                        },
                        new
                        {
                            Id = new Guid("7080b9b1-6f92-4ee1-8a57-0329a226d0f7"),
                            ColorId = 3,
                            ProductArticleNumber = "JEANS002",
                            Quantity = 2,
                            SizeId = 5
                        },
                        new
                        {
                            Id = new Guid("72e2ff20-0ea6-4e2a-9c4c-e5e1f1692e5a"),
                            ColorId = 4,
                            ProductArticleNumber = "KIDHAT003",
                            Quantity = 9,
                            SizeId = 19
                        },
                        new
                        {
                            Id = new Guid("e2b91a7a-0e02-4f18-a6c4-5ef42491b4ca"),
                            ColorId = 6,
                            ProductArticleNumber = "KNITTED004",
                            Quantity = 2,
                            SizeId = 2
                        },
                        new
                        {
                            Id = new Guid("347f12a5-d8b1-4565-8c6d-0a5c8edc2c26"),
                            ColorId = 6,
                            ProductArticleNumber = "KNITTED004",
                            Quantity = 5,
                            SizeId = 3
                        },
                        new
                        {
                            Id = new Guid("5640a6f3-4312-4a2f-aa8e-f5f17a01e262"),
                            ColorId = 6,
                            ProductArticleNumber = "KNITTED004",
                            Quantity = 1,
                            SizeId = 4
                        },
                        new
                        {
                            Id = new Guid("c3430e76-6df9-4c9d-8d8b-655e22db6f53"),
                            ColorId = 2,
                            ProductArticleNumber = "SNEAKERS005",
                            Quantity = 2,
                            SizeId = 11
                        },
                        new
                        {
                            Id = new Guid("0a83d9c2-67c5-4432-9e8d-ee02a8fb3bf0"),
                            ColorId = 2,
                            ProductArticleNumber = "SNEAKERS005",
                            Quantity = 2,
                            SizeId = 12
                        },
                        new
                        {
                            Id = new Guid("d4c1815f-42e1-47c2-9c4b-ff5c22771f0e"),
                            ColorId = 2,
                            ProductArticleNumber = "SNEAKERS005",
                            Quantity = 2,
                            SizeId = 13
                        },
                        new
                        {
                            Id = new Guid("1d21d5db-0b07-490e-a2cf-9a1c8f3bf50f"),
                            ColorId = 2,
                            ProductArticleNumber = "SNEAKERS005",
                            Quantity = 2,
                            SizeId = 14
                        },
                        new
                        {
                            Id = new Guid("943b4ff9-4b16-42ab-8d63-3ddcc741c73e"),
                            ColorId = 2,
                            ProductArticleNumber = "SNEAKERS005",
                            Quantity = 2,
                            SizeId = 15
                        },
                        new
                        {
                            Id = new Guid("81d22c44-12e5-4e79-9f2b-13a63e1e7601"),
                            ColorId = 7,
                            ProductArticleNumber = "KIDPANTS006",
                            Quantity = 1,
                            SizeId = 19
                        },
                        new
                        {
                            Id = new Guid("6f8f3a5e-00a4-4c7b-8dd3-7efbb3a6f99e"),
                            ColorId = 7,
                            ProductArticleNumber = "KIDPANTS006",
                            Quantity = 2,
                            SizeId = 20
                        },
                        new
                        {
                            Id = new Guid("27b94599-398f-48f6-935c-8ebf181fcbbd"),
                            ColorId = 7,
                            ProductArticleNumber = "KIDPANTS006",
                            Quantity = 4,
                            SizeId = 21
                        },
                        new
                        {
                            Id = new Guid("39246b6e-433b-4571-8f3a-49a2b8c3dace"),
                            ColorId = 8,
                            ProductArticleNumber = "OWLHAT007",
                            Quantity = 2,
                            SizeId = 18
                        },
                        new
                        {
                            Id = new Guid("e82c1f57-656b-4bde-92a6-0f4151a9e6e2"),
                            ColorId = 8,
                            ProductArticleNumber = "OWLHAT007",
                            Quantity = 2,
                            SizeId = 19
                        },
                        new
                        {
                            Id = new Guid("9c31d8ed-463e-4c76-8a2c-c99fc8219fb1"),
                            ColorId = 9,
                            ProductArticleNumber = "HANDBAG008",
                            Quantity = 3,
                            SizeId = 3
                        },
                        new
                        {
                            Id = new Guid("4f9d61a2-927d-4901-bb6e-c4e2bf20d87b"),
                            ColorId = 10,
                            ProductArticleNumber = "SNEAKERS009",
                            Quantity = 3,
                            SizeId = 10
                        },
                        new
                        {
                            Id = new Guid("e9f23d6a-fdcd-44f9-a163-35a67b1d9905"),
                            ColorId = 10,
                            ProductArticleNumber = "SNEAKERS009",
                            Quantity = 2,
                            SizeId = 13
                        },
                        new
                        {
                            Id = new Guid("6e427f7d-982e-4f3b-ba79-5d0f17f73dfc"),
                            ColorId = 10,
                            ProductArticleNumber = "SNEAKERS009",
                            Quantity = 2,
                            SizeId = 14
                        },
                        new
                        {
                            Id = new Guid("cfb38a58-792e-45b2-8b1c-8e6317e512ca"),
                            ColorId = 9,
                            ProductArticleNumber = "STRIPEDSHIRT010",
                            Quantity = 2,
                            SizeId = 18
                        },
                        new
                        {
                            Id = new Guid("a75c4a16-5a16-457f-8e5a-77c6e9b309cb"),
                            ColorId = 9,
                            ProductArticleNumber = "STRIPEDSHIRT010",
                            Quantity = 5,
                            SizeId = 19
                        },
                        new
                        {
                            Id = new Guid("4a5bd9c6-6b89-45ce-a8e5-69dfec2d2a1f"),
                            ColorId = 9,
                            ProductArticleNumber = "STRIPEDSHIRT010",
                            Quantity = 1,
                            SizeId = 21
                        },
                        new
                        {
                            Id = new Guid("2a8e03c1-7252-45f9-9f5c-56ab9bf3c11b"),
                            ColorId = 10,
                            ProductArticleNumber = "SUMMERDRESS011",
                            Quantity = 5,
                            SizeId = 2
                        },
                        new
                        {
                            Id = new Guid("d3b7b08d-1c65-4d01-8e9a-69ac6d977972"),
                            ColorId = 10,
                            ProductArticleNumber = "SUMMERDRESS011",
                            Quantity = 3,
                            SizeId = 3
                        },
                        new
                        {
                            Id = new Guid("51fb2941-879a-4ea6-a7d2-0cbac775e636"),
                            ColorId = 10,
                            ProductArticleNumber = "SUMMERDRESS011",
                            Quantity = 4,
                            SizeId = 4
                        },
                        new
                        {
                            Id = new Guid("f9d1d88f-864a-4d19-a91d-8a4a4e2d34e6"),
                            ColorId = 10,
                            ProductArticleNumber = "SUMMERDRESS011",
                            Quantity = 2,
                            SizeId = 5
                        },
                        new
                        {
                            Id = new Guid("0f251c6c-02ce-4b97-a352-5692d23cc8e0"),
                            ColorId = 10,
                            ProductArticleNumber = "VANSSHOES012",
                            Quantity = 6,
                            SizeId = 8
                        },
                        new
                        {
                            Id = new Guid("4e2f3d45-6210-4c84-ae22-83a7454697ea"),
                            ColorId = 10,
                            ProductArticleNumber = "VANSSHOES012",
                            Quantity = 4,
                            SizeId = 9
                        },
                        new
                        {
                            Id = new Guid("791cb653-7e36-47b1-8a19-eb9cfaf0e84b"),
                            ColorId = 12,
                            ProductArticleNumber = "KIDSBODYSUIT013",
                            Quantity = 2,
                            SizeId = 17
                        },
                        new
                        {
                            Id = new Guid("8e548b7f-6a08-432d-b9b5-5c8b7fc2da59"),
                            ColorId = 12,
                            ProductArticleNumber = "KIDSBODYSUIT013",
                            Quantity = 8,
                            SizeId = 18
                        },
                        new
                        {
                            Id = new Guid("7b4d8a99-3b8e-47c7-89d1-e01a7c19d5e4"),
                            ColorId = 12,
                            ProductArticleNumber = "WHITETEE014",
                            Quantity = 4,
                            SizeId = 1
                        },
                        new
                        {
                            Id = new Guid("3b8da2e1-964b-4ff2-aa65-4f67b69de2b0"),
                            ColorId = 12,
                            ProductArticleNumber = "WHITETEE014",
                            Quantity = 2,
                            SizeId = 2
                        },
                        new
                        {
                            Id = new Guid("16c9f4d8-9c41-4a02-9e78-dfe328efb6fc"),
                            ColorId = 12,
                            ProductArticleNumber = "WHITETEE014",
                            Quantity = 5,
                            SizeId = 3
                        },
                        new
                        {
                            Id = new Guid("45ed8f8d-c5e3-4623-ba85-d3a8ecdbf78c"),
                            ColorId = 12,
                            ProductArticleNumber = "WHITETEE014",
                            Quantity = 3,
                            SizeId = 4
                        },
                        new
                        {
                            Id = new Guid("8a79e5a1-621c-4f0e-b3d9-4c4f6e67f52e"),
                            ColorId = 12,
                            ProductArticleNumber = "WHITETEE014",
                            Quantity = 1,
                            SizeId = 5
                        },
                        new
                        {
                            Id = new Guid("a6d9c3f8-9c25-4b79-a76d-2f09a8c6f71e"),
                            ColorId = 12,
                            ProductArticleNumber = "WHITETEE014",
                            Quantity = 2,
                            SizeId = 6
                        },
                        new
                        {
                            Id = new Guid("0e83f6a7-97c1-4b4a-8d0a-10b8f9d2d1af"),
                            ColorId = 12,
                            ProductArticleNumber = "MENSWHITETEE015",
                            Quantity = 2,
                            SizeId = 2
                        },
                        new
                        {
                            Id = new Guid("d3c2f9b4-0e6a-42a3-9dfe-8f8ea1c8b3f2"),
                            ColorId = 12,
                            ProductArticleNumber = "MENSWHITETEE015",
                            Quantity = 6,
                            SizeId = 3
                        },
                        new
                        {
                            Id = new Guid("9b51f7e6-49d0-40e5-bc27-2c8d2efc5f01"),
                            ColorId = 12,
                            ProductArticleNumber = "MENSWHITETEE015",
                            Quantity = 3,
                            SizeId = 4
                        },
                        new
                        {
                            Id = new Guid("7e21c4d9-8ca5-464e-9b23-4a7e3c6d8d59"),
                            ColorId = 12,
                            ProductArticleNumber = "MENSWHITETEE015",
                            Quantity = 5,
                            SizeId = 5
                        },
                        new
                        {
                            Id = new Guid("84f7cde0-7b9e-4f17-af2a-d0d0ef3a7d9c"),
                            ColorId = 12,
                            ProductArticleNumber = "MENSWHITETEE015",
                            Quantity = 1,
                            SizeId = 6
                        },
                        new
                        {
                            Id = new Guid("1c3bd0e2-8b7f-4c58-9f0e-7e5e0cf19fb1"),
                            ColorId = 10,
                            ProductArticleNumber = "BEACHSHOES016",
                            Quantity = 5,
                            SizeId = 8
                        },
                        new
                        {
                            Id = new Guid("65b9c2f0-413a-4f98-9f92-ef2a7c2b1c84"),
                            ColorId = 10,
                            ProductArticleNumber = "BEACHSHOES016",
                            Quantity = 2,
                            SizeId = 9
                        },
                        new
                        {
                            Id = new Guid("e5a4d6c1-7c8d-44c9-81a4-8b27f0e3a45d"),
                            ColorId = 10,
                            ProductArticleNumber = "BEACHSHOES016",
                            Quantity = 3,
                            SizeId = 11
                        },
                        new
                        {
                            Id = new Guid("4b18d5e7-9e32-4a0b-a8a2-efdc7f3d4b2e"),
                            ColorId = 5,
                            ProductArticleNumber = "BEIGEPANTS017",
                            Quantity = 2,
                            SizeId = 2
                        },
                        new
                        {
                            Id = new Guid("728c3e5b-9d4f-4bf1-8c87-6b4b6a7a3c91"),
                            ColorId = 5,
                            ProductArticleNumber = "BEIGEPANTS017",
                            Quantity = 1,
                            SizeId = 3
                        },
                        new
                        {
                            Id = new Guid("43f8e1c0-6d21-4cda-9e7c-2c6a9bf7a8f5"),
                            ColorId = 5,
                            ProductArticleNumber = "BEIGEPANTS017",
                            Quantity = 1,
                            SizeId = 4
                        },
                        new
                        {
                            Id = new Guid("10b5e2c4-7f96-46a2-8cfa-5d85a6d0e4f2"),
                            ColorId = 4,
                            ProductArticleNumber = "BLACKSNEAKERS018",
                            Quantity = 1,
                            SizeId = 10
                        },
                        new
                        {
                            Id = new Guid("6a4d3f0e-3d7b-4bdc-9a1a-3a9e6d0f4e1b"),
                            ColorId = 4,
                            ProductArticleNumber = "BLACKSNEAKERS018",
                            Quantity = 6,
                            SizeId = 12
                        },
                        new
                        {
                            Id = new Guid("9e0f7ca2-4a1b-41d5-ae9c-8bca0f8d39f2"),
                            ColorId = 4,
                            ProductArticleNumber = "BLACKSNEAKERS018",
                            Quantity = 3,
                            SizeId = 13
                        },
                        new
                        {
                            Id = new Guid("81d2f5a9-48c1-4a86-a79b-d39bf4c8d5e6"),
                            ColorId = 4,
                            ProductArticleNumber = "BLACKTEE019",
                            Quantity = 4,
                            SizeId = 2
                        },
                        new
                        {
                            Id = new Guid("2d8c4f3a-4a7d-42b8-8e0f-1e5b7c6d0f4a"),
                            ColorId = 4,
                            ProductArticleNumber = "BLACKTEE019",
                            Quantity = 3,
                            SizeId = 4
                        },
                        new
                        {
                            Id = new Guid("7b6f2d8c-0a9e-4bf5-8c7e-6e8c4b9d2a8e"),
                            ColorId = 4,
                            ProductArticleNumber = "BLACKTEE019",
                            Quantity = 2,
                            SizeId = 6
                        },
                        new
                        {
                            Id = new Guid("49b8e2c1-7a2d-4b89-8f1e-d6b7f0c2e3a4"),
                            ColorId = 4,
                            ProductArticleNumber = "BLACKWARMHAT020",
                            Quantity = 4,
                            SizeId = 3
                        },
                        new
                        {
                            Id = new Guid("a4c9d1f7-0b7e-4a23-9e8f-8d7e1c5b3f0d"),
                            ColorId = 4,
                            ProductArticleNumber = "BLACKWARMHAT020",
                            Quantity = 1,
                            SizeId = 4
                        },
                        new
                        {
                            Id = new Guid("6d8b3f2a-4f6e-49c1-a7d0-8f5e2a9c1b7d"),
                            ColorId = 3,
                            ProductArticleNumber = "KIDBLUEDRESS021",
                            Quantity = 2,
                            SizeId = 19
                        },
                        new
                        {
                            Id = new Guid("e1d4b7c0-8c2a-43f5-b9d2-7f6e8d3a1c5b"),
                            ColorId = 3,
                            ProductArticleNumber = "KIDBLUEDRESS021",
                            Quantity = 3,
                            SizeId = 20
                        },
                        new
                        {
                            Id = new Guid("8c9e1a4d-0f6b-49a2-9c5d-1f3e8b2d4c1a"),
                            ColorId = 6,
                            ProductArticleNumber = "BROWNHANDBAG022",
                            Quantity = 4,
                            SizeId = 3
                        },
                        new
                        {
                            Id = new Guid("0d8b1c3e-4f5a-42d1-9c7e-8b6d2f1a4c9e"),
                            ColorId = 6,
                            ProductArticleNumber = "CHECKEREDHANDBAG023",
                            Quantity = 8,
                            SizeId = 2
                        },
                        new
                        {
                            Id = new Guid("4e5d2c9f-7b6c-4d8a-8e9f-2a1c8d9e0f6b"),
                            ColorId = 4,
                            ProductArticleNumber = "CHECKEREDKIDSDRESS024",
                            Quantity = 7,
                            SizeId = 18
                        },
                        new
                        {
                            Id = new Guid("a3f1e8d2-6c9b-4a5d-8e2f-9d4c1b7a0e6d"),
                            ColorId = 4,
                            ProductArticleNumber = "CHECKEREDKIDSDRESS024",
                            Quantity = 2,
                            SizeId = 19
                        },
                        new
                        {
                            Id = new Guid("2a8f7e3d-6c4a-4d1b-8e5d-9f1c2a4b7c8e"),
                            ColorId = 13,
                            ProductArticleNumber = "COLORFULKIDSDRESS025",
                            Quantity = 4,
                            SizeId = 19
                        },
                        new
                        {
                            Id = new Guid("d7f5c3e0-8b2a-4d1c-9f7e-6c5a8d1b4e9f"),
                            ColorId = 13,
                            ProductArticleNumber = "COLORFULKIDSDRESS025",
                            Quantity = 6,
                            SizeId = 20
                        },
                        new
                        {
                            Id = new Guid("6d2c4b7f-9a1e-4c8d-8b7e-2f3a1c9b0e5d"),
                            ColorId = 2,
                            ProductArticleNumber = "DENIMSHORTS026",
                            Quantity = 2,
                            SizeId = 1
                        },
                        new
                        {
                            Id = new Guid("1f7e6c8a-4d5b-49e2-9c3a-2b7f0d4e1a5c"),
                            ColorId = 2,
                            ProductArticleNumber = "DENIMSHORTS026",
                            Quantity = 1,
                            SizeId = 2
                        },
                        new
                        {
                            Id = new Guid("8d9f4c2e-6a3d-4f1b-9c7a-0e5f7c8b2a1d"),
                            ColorId = 2,
                            ProductArticleNumber = "DENIMSHORTS026",
                            Quantity = 2,
                            SizeId = 3
                        },
                        new
                        {
                            Id = new Guid("7a4e5f1c-8c9b-4d3f-9a7e-1b2d0e6f5c8a"),
                            ColorId = 2,
                            ProductArticleNumber = "DENIMSHORTS026",
                            Quantity = 1,
                            SizeId = 4
                        },
                        new
                        {
                            Id = new Guid("44f05c4e-3b60-4c53-84c9-3b16d8b5c020"),
                            ColorId = 11,
                            ProductArticleNumber = "GREENKIDSSHOES027",
                            Quantity = 1,
                            SizeId = 17
                        },
                        new
                        {
                            Id = new Guid("6d7ea51e-9f40-48d1-a75d-0ef47b46311c"),
                            ColorId = 11,
                            ProductArticleNumber = "GREENKIDSSHOES027",
                            Quantity = 6,
                            SizeId = 18
                        },
                        new
                        {
                            Id = new Guid("8c245f6a-6e6d-43e3-9d0e-45f67aaf2e31"),
                            ColorId = 14,
                            ProductArticleNumber = "GREYWOMENSTEE028",
                            Quantity = 4,
                            SizeId = 1
                        },
                        new
                        {
                            Id = new Guid("faa2e4a3-739c-41e7-82d4-2489d2c25ba6"),
                            ColorId = 14,
                            ProductArticleNumber = "GREYWOMENSTEE028",
                            Quantity = 3,
                            SizeId = 2
                        },
                        new
                        {
                            Id = new Guid("37e9ac13-08a2-4902-ae3f-55f6f2b8790e"),
                            ColorId = 14,
                            ProductArticleNumber = "GREYWOMENSTEE028",
                            Quantity = 2,
                            SizeId = 3
                        },
                        new
                        {
                            Id = new Guid("db8a6f0d-d7c5-4eeb-9404-91a6eac0377d"),
                            ColorId = 14,
                            ProductArticleNumber = "GREYWOMENSTEE028",
                            Quantity = 1,
                            SizeId = 4
                        },
                        new
                        {
                            Id = new Guid("9a48bcf9-afcd-4b1b-8df1-6fc1ec5f17b7"),
                            ColorId = 14,
                            ProductArticleNumber = "GREYWOMENSTEE028",
                            Quantity = 2,
                            SizeId = 5
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.PromocodeEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("money");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("ValidUntilDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Promocodes");

                    b.HasData(
                        new
                        {
                            Id = "WIN5IQP658",
                            Discount = 5m,
                            ImageUrl = "~/images/promocodes/5.png",
                            Title = "Get 5% Off Your Purchase Today!",
                            ValidUntilDate = new DateTime(2023, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "APIK85WQRT",
                            Discount = 10m,
                            ImageUrl = "~/images/promocodes/10.png",
                            Title = "Enjoy a 10% Discount on Your Next Order!",
                            ValidUntilDate = new DateTime(2023, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "20DERL5LOT",
                            Discount = 20m,
                            ImageUrl = "~/images/promocodes/20.png",
                            Title = "Big Savings: Take 20% Off Your Purchase!",
                            ValidUntilDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.SizeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SizeName = "XS"
                        },
                        new
                        {
                            Id = 2,
                            SizeName = "S"
                        },
                        new
                        {
                            Id = 3,
                            SizeName = "M"
                        },
                        new
                        {
                            Id = 4,
                            SizeName = "L"
                        },
                        new
                        {
                            Id = 5,
                            SizeName = "XL"
                        },
                        new
                        {
                            Id = 6,
                            SizeName = "XXL"
                        },
                        new
                        {
                            Id = 7,
                            SizeName = "XXXL"
                        },
                        new
                        {
                            Id = 8,
                            SizeName = "EU38"
                        },
                        new
                        {
                            Id = 9,
                            SizeName = "EU39"
                        },
                        new
                        {
                            Id = 10,
                            SizeName = "EU40"
                        },
                        new
                        {
                            Id = 11,
                            SizeName = "EU41"
                        },
                        new
                        {
                            Id = 12,
                            SizeName = "EU42"
                        },
                        new
                        {
                            Id = 13,
                            SizeName = "EU43"
                        },
                        new
                        {
                            Id = 14,
                            SizeName = "EU44"
                        },
                        new
                        {
                            Id = 15,
                            SizeName = "EU45"
                        },
                        new
                        {
                            Id = 16,
                            SizeName = "EU46"
                        },
                        new
                        {
                            Id = 17,
                            SizeName = "0-1y"
                        },
                        new
                        {
                            Id = 18,
                            SizeName = "1-2y"
                        },
                        new
                        {
                            Id = 19,
                            SizeName = "2-4y"
                        },
                        new
                        {
                            Id = 20,
                            SizeName = "4-6y"
                        },
                        new
                        {
                            Id = 21,
                            SizeName = "6-9y"
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.StatusCodeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusCodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Order being processed"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Shipping"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Delivered"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Canceled"
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.TagEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TagName = "sale"
                        },
                        new
                        {
                            Id = 2,
                            TagName = "new"
                        },
                        new
                        {
                            Id = 3,
                            TagName = "top"
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.UserAdressEntity", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AdressId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId", "AdressId");

                    b.HasIndex("AdressId");

                    b.ToTable("UserAdresses");

                    b.HasData(
                        new
                        {
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721",
                            AdressId = 1,
                            Title = "Home"
                        },
                        new
                        {
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984",
                            AdressId = 1,
                            Title = "Home"
                        },
                        new
                        {
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199",
                            AdressId = 2,
                            Title = "Home"
                        },
                        new
                        {
                            UserId = "8c5b75a1-6c17-4c7b-a5d7-562eaf1c3284",
                            AdressId = 2,
                            Title = "Home"
                        },
                        new
                        {
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721",
                            AdressId = 3,
                            Title = "Parents"
                        },
                        new
                        {
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199",
                            AdressId = 3,
                            Title = "Work"
                        },
                        new
                        {
                            UserId = "0a43d58a-cb53-4c60-b4f3-8b88e84dd26d",
                            AdressId = 3,
                            Title = "Home"
                        },
                        new
                        {
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984",
                            AdressId = 4,
                            Title = "Other"
                        },
                        new
                        {
                            UserId = "8c5b75a1-6c17-4c7b-a5d7-562eaf1c3284",
                            AdressId = 4,
                            Title = "Work"
                        },
                        new
                        {
                            UserId = "8c5b75a1-6c17-4c7b-a5d7-562eaf1c3284",
                            AdressId = 5,
                            Title = "Other"
                        },
                        new
                        {
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199",
                            AdressId = 5,
                            Title = "Other"
                        },
                        new
                        {
                            UserId = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984",
                            AdressId = 6,
                            Title = "Parents"
                        },
                        new
                        {
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721",
                            AdressId = 7,
                            Title = "Other"
                        },
                        new
                        {
                            UserId = "8c5b75a1-6c17-4c7b-a5d7-562eaf1c3284",
                            AdressId = 7,
                            Title = "Parents"
                        },
                        new
                        {
                            UserId = "7d75c0ea-3c5e-443b-b29b-6c3e9ecbc2d3",
                            AdressId = 8,
                            Title = "Home"
                        },
                        new
                        {
                            UserId = "0a43d58a-cb53-4c60-b4f3-8b88e84dd26d",
                            AdressId = 9,
                            Title = "Work"
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f1a46d0e-07a1-4e31-8cc3-4f2e28e4f984",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cb8aa037-fb24-4f06-a69e-7706a48d1a95",
                            Email = "annette@example.com",
                            EmailConfirmed = true,
                            FirstName = "Annette",
                            LastName = "Hill",
                            LockoutEnabled = true,
                            NormalizedEmail = "ANNETTE@EXAMPLE.COM",
                            NormalizedUserName = "ANNETTEHILL",
                            PasswordHash = "AQAAAAIAAYagAAAAEB9UI0BgnhUihwAha8AMt3dZKTUd34wUuazsHvL0ETiWCA94qbryesPZzmnD9h5UsA==",
                            PhoneNumber = "0704567890",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "/images/profiles/annette-hill.jpg",
                            SecurityStamp = "8d854789-ebd1-4926-87fc-2ea0637dc6d4",
                            TwoFactorEnabled = false,
                            UserName = "annettehill"
                        },
                        new
                        {
                            Id = "8c5b75a1-6c17-4c7b-a5d7-562eaf1c3284",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e48e8961-101a-4b94-8299-c1640a72af72",
                            Email = "cameron@example.com",
                            EmailConfirmed = true,
                            FirstName = "Cameron",
                            LastName = "Williamson",
                            LockoutEnabled = true,
                            NormalizedEmail = "CAMERON@EXAMPLE.COM",
                            NormalizedUserName = "CAMERONWILLIAMSON",
                            PasswordHash = "AQAAAAIAAYagAAAAEB9UI0BgnhUihwAha8AMt3dZKTUd34wUuazsHvL0ETiWCA94qbryesPZzmnD9h5UsA==",
                            PhoneNumber = "0705678901",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "/images/profiles/cameron-williamson.jpg",
                            SecurityStamp = "9e521546-f054-42b9-b505-bc5d8b43e744",
                            TwoFactorEnabled = false,
                            UserName = "cameronwilliamson"
                        },
                        new
                        {
                            Id = "0a43d58a-cb53-4c60-b4f3-8b88e84dd26d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1ba50391-1bae-4304-92e1-183b69c16624",
                            Email = "jacob@example.com",
                            EmailConfirmed = true,
                            FirstName = "Jacob",
                            LastName = "Jones",
                            LockoutEnabled = true,
                            NormalizedEmail = "JACOB@EXAMPLE.COM",
                            NormalizedUserName = "JACOBJONES",
                            PasswordHash = "AQAAAAIAAYagAAAAEB9UI0BgnhUihwAha8AMt3dZKTUd34wUuazsHvL0ETiWCA94qbryesPZzmnD9h5UsA==",
                            PhoneNumber = "0706789012",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "/images/profiles/jacob-jones.jpg",
                            SecurityStamp = "81fa12e1-b9f1-4fa2-819d-d478a5a01eb8",
                            TwoFactorEnabled = false,
                            UserName = "jacobjones"
                        },
                        new
                        {
                            Id = "1f75883b-125b-49b9-a3f1-931b83d05199",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "65de4279-0f13-4d45-8116-395bcb628eee",
                            Email = "jenny@example.com",
                            EmailConfirmed = true,
                            FirstName = "Jenny",
                            LastName = "Wilson",
                            LockoutEnabled = true,
                            NormalizedEmail = "JENNY@EXAMPLE.COM",
                            NormalizedUserName = "JENNYWILSON",
                            PasswordHash = "AQAAAAIAAYagAAAAEB9UI0BgnhUihwAha8AMt3dZKTUd34wUuazsHvL0ETiWCA94qbryesPZzmnD9h5UsA==",
                            PhoneNumber = "0707890123",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "/images/profiles/jenny-wilson.jpg",
                            SecurityStamp = "06c058ab-9366-4be7-bcc0-dcf7b0a94e79",
                            TwoFactorEnabled = false,
                            UserName = "jennywilson"
                        },
                        new
                        {
                            Id = "7d75c0ea-3c5e-443b-b29b-6c3e9ecbc2d3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1be50a10-03b0-42f9-a51d-3fc09245771f",
                            Email = "marvin@example.com",
                            EmailConfirmed = true,
                            FirstName = "Marvin",
                            LastName = "McKinney",
                            LockoutEnabled = true,
                            NormalizedEmail = "MARVIN@EXAMPLE.COM",
                            NormalizedUserName = "MARVINMCKINNEY",
                            PasswordHash = "AQAAAAIAAYagAAAAEB9UI0BgnhUihwAha8AMt3dZKTUd34wUuazsHvL0ETiWCA94qbryesPZzmnD9h5UsA==",
                            PhoneNumber = "0708901234",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "/images/profiles/marvin-mckinney.jpg",
                            SecurityStamp = "e90372cf-6ede-4296-847a-dbc55fd8eb6d",
                            TwoFactorEnabled = false,
                            UserName = "marvinmckinney"
                        },
                        new
                        {
                            Id = "3b21a87a-aa26-4c90-9a2d-4c81205a0721",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "46b34db9-151f-43c3-af0d-2a63a90b57ab",
                            Email = "theresa@example.com",
                            EmailConfirmed = true,
                            FirstName = "Theresa",
                            LastName = "Webb",
                            LockoutEnabled = true,
                            NormalizedEmail = "THERESA@EXAMPLE.COM",
                            NormalizedUserName = "THERESAWEBB",
                            PasswordHash = "AQAAAAIAAYagAAAAEB9UI0BgnhUihwAha8AMt3dZKTUd34wUuazsHvL0ETiWCA94qbryesPZzmnD9h5UsA==",
                            PhoneNumber = "0709012345",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "/images/profiles/theresa-webb.jpg",
                            SecurityStamp = "09b7f820-6d5f-4005-8b70-b23962dadc5d",
                            TwoFactorEnabled = false,
                            UserName = "theresawebb"
                        });
                });

            modelBuilder.Entity("Manero.Models.Entities.UserPaymentMethodsEntity", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "PaymentId");

                    b.HasIndex("PaymentId");

                    b.ToTable("UserPaymentMethods");
                });

            modelBuilder.Entity("Manero.Models.Entities.UserPromocodeEntity", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "CodeId");

                    b.HasIndex("CodeId");

                    b.ToTable("UserPromocodes");

                    b.HasData(
                        new
                        {
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721",
                            CodeId = "WIN5IQP658"
                        },
                        new
                        {
                            UserId = "7d75c0ea-3c5e-443b-b29b-6c3e9ecbc2d3",
                            CodeId = "WIN5IQP658"
                        },
                        new
                        {
                            UserId = "1f75883b-125b-49b9-a3f1-931b83d05199",
                            CodeId = "APIK85WQRT"
                        },
                        new
                        {
                            UserId = "0a43d58a-cb53-4c60-b4f3-8b88e84dd26d",
                            CodeId = "APIK85WQRT"
                        },
                        new
                        {
                            UserId = "7d75c0ea-3c5e-443b-b29b-6c3e9ecbc2d3",
                            CodeId = "APIK85WQRT"
                        },
                        new
                        {
                            UserId = "3b21a87a-aa26-4c90-9a2d-4c81205a0721",
                            CodeId = "20DERL5LOT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Manero.Models.Entities.CheckoutEntity", b =>
                {
                    b.HasOne("Manero.Models.Entities.OrderEntity", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.PaymentMethodEntity", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.StatusCodeEntity", "StatusCode")
                        .WithMany()
                        .HasForeignKey("StatusCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("PaymentMethod");

                    b.Navigation("StatusCode");
                });

            modelBuilder.Entity("Manero.Models.Entities.OrderEntity", b =>
                {
                    b.HasOne("Manero.Models.Entities.PromocodeEntity", "Promocode")
                        .WithMany()
                        .HasForeignKey("PromocodeId");

                    b.Navigation("Promocode");
                });

            modelBuilder.Entity("Manero.Models.Entities.OrderRowEntity", b =>
                {
                    b.HasOne("Manero.Models.Entities.OrderEntity", "Order")
                        .WithMany("OrderRows")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.ProductVariantEntity", "ProductVariant")
                        .WithMany()
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("Manero.Models.Entities.ProductCategoryEntity", b =>
                {
                    b.HasOne("Manero.Models.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.ProductEntity", "Product")
                        .WithMany("Categories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Manero.Models.Entities.ProductImageEntity", b =>
                {
                    b.HasOne("Manero.Models.Entities.ImageEntity", "Image")
                        .WithMany("ProductImages")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.ProductEntity", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Manero.Models.Entities.ProductReviewEntity", b =>
                {
                    b.HasOne("Manero.Models.Entities.ProductEntity", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductArticleNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Manero.Models.Entities.ProductTagEntity", b =>
                {
                    b.HasOne("Manero.Models.Entities.ProductEntity", "Product")
                        .WithMany("Tags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.TagEntity", "Tag")
                        .WithMany("ProductTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Manero.Models.Entities.ProductVariantEntity", b =>
                {
                    b.HasOne("Manero.Models.Entities.ColorEntity", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.ProductEntity", "Product")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ProductArticleNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.SizeEntity", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Manero.Models.Entities.UserAdressEntity", b =>
                {
                    b.HasOne("Manero.Models.Entities.AdressEntity", "Adress")
                        .WithMany("Users")
                        .HasForeignKey("AdressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.UserEntity", "User")
                        .WithMany("Adresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Manero.Models.Entities.UserPaymentMethodsEntity", b =>
                {
                    b.HasOne("Manero.Models.Entities.PaymentMethodEntity", "PaymentMethod")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.UserEntity", "User")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentMethod");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Manero.Models.Entities.UserPromocodeEntity", b =>
                {
                    b.HasOne("Manero.Models.Entities.PromocodeEntity", "Promocode")
                        .WithMany("Promocodes")
                        .HasForeignKey("CodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.UserEntity", "User")
                        .WithMany("Promocodes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promocode");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Manero.Models.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Manero.Models.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero.Models.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Manero.Models.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Manero.Models.Entities.AdressEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Manero.Models.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Manero.Models.Entities.ImageEntity", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Manero.Models.Entities.OrderEntity", b =>
                {
                    b.Navigation("OrderRows");
                });

            modelBuilder.Entity("Manero.Models.Entities.PaymentMethodEntity", b =>
                {
                    b.Navigation("PaymentMethods");
                });

            modelBuilder.Entity("Manero.Models.Entities.ProductEntity", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Images");

                    b.Navigation("ProductVariants");

                    b.Navigation("Reviews");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Manero.Models.Entities.PromocodeEntity", b =>
                {
                    b.Navigation("Promocodes");
                });

            modelBuilder.Entity("Manero.Models.Entities.TagEntity", b =>
                {
                    b.Navigation("ProductTags");
                });

            modelBuilder.Entity("Manero.Models.Entities.UserEntity", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("PaymentMethods");

                    b.Navigation("Promocodes");
                });
#pragma warning restore 612, 618
        }
    }
}
